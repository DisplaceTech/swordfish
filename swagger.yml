swagger: "2.0"
info:
  description: "This is a basic API for setting and retrieving secret values from a server."
  version: "1.0.0"
  title: "Project Swordfish"
  contact:
    email: "eric@eamann.com"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
host: "swordfish.displace.tech"
basePath: "/"
tags:
  - name: "front-end"
    description: "The public front-end of the application. An otherwise static web application."
  - name: "api"
    description: "The request/response API of the system used by both the front-end UI and CLI tools."
schemes:
  - "https"
paths:
  /:
    get:
      summary: "Get the static homepage for creating secrets."
      tags:
        - "front-end"
      produces:
        - "text/html"
      responses:
        "200":
          description: "OK"
  /secret:
    get:
      summary: "Get an empty secret retrieval page."
      tags:
        - "front-end"
      produces:
        - "text/html"
      responses:
        "200":
          description: "OK"
  /secret/{secretId}:
    get:
      summary: "Get a pre-populated secret retrieval page."
      tags:
        - "front-end"
      parameters:
        - name: "secretId"
          in: "path"
          description: "ID of secret to return"
          required: true
          type: "string"
      produces:
        - "text/html"
      responses:
        "200":
          description: "OK"

  /api/create:
    post:
      summary: "Create a new secret in the datastore."
      tags:
        - "api"
      consumes:
        - "text/plain"
      produces:
        - "text/plain"
      parameters:
        - in: "body"
          name: "body"
          description: "Serialized secret to store in the server"
          required: true
          schema:
            type: "string"
      responses:
        "201":
          description: "Created"
        "400":
          description: "Bad Request"
        "413":
          description: "Payload Too Large"
  /api/retrieve:
    post:
      summary: "Retrieve a secret from the datastore."
      tags:
        - "api"
      consumes:
        - "text/plain"
      produces:
        - "text/plain"
      parameters:
        - in: "body"
          name: "body"
          description: "Serialized authentication request for a stored secret"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "404":
          description: "Not Found"